/**
 * @param pid Process ID to search for.
 * @returns Process user-mode CPU usage time in ms, or 0 if not found.
 */
export declare function cpuUserTime(pid: number): number;
/**
 * @param pid Process ID to search for.
 * @returns Process kernel-mode (system-mode) CPU usage time in ms, or 0 if not found.
 */
export declare function cpuKernelTime(pid: number): number;
/**
 * @param pid Process ID to search for.
 * @returns Process total CPU usage time in ms, or 0 if not found.
 */
export declare function cpuTime(pid: number): number;
/**
 * @param pid Process ID to search for.
 * @returns Total usage in bytes. Windows includes shared working set while linux is more strict.
 *
 * Note that as this includes virtual memory, it will often be extremely high on MacOS.
 */
export declare function memInfo(pid: number): number;
/**
 * @param pid Process ID to search for.
 * @returns Resident/working set size in bytes. Windows includes shared working set while linux is more strict.
 *
 * Depending on operating system, this may be approximate. It represents the total amount of physical memory being used,
 * which does not include any vitual memory.
 */
export declare function memRSS(pid: number): number;
/**
 * @param pid Process ID to search for.
 * @returns Number of bytes process has read from file.
 */
export declare function fileRead(pid: number): number;
/**
 * @param pid Process ID to search for.
 * @returns Number of bytes process has written to file.
 */
export declare function fileWrite(pid: number): number;
